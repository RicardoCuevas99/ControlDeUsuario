<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>